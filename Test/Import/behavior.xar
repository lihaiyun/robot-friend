<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="Import" id="1" localization="8" tooltip="" x="186" y="116">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        import sys, os
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)

        import requests
        import watson_developer_cloud

        import json
        from os.path import join, dirname
        from watson_developer_cloud import SpeechToTextV1

        speech_to_text = SpeechToTextV1(
            username='8597752d-c857-4cd9-8580-316055420e75',
            password='aywM8ziCKACw',
            x_watson_learning_opt_out=False
        )

        #print(json.dumps(speech_to_text.models(), indent=2))

        #print(json.dumps(speech_to_text.get_model('en-US_BroadbandModel'), indent=2))

        speech_to_text.get_model('en-US_BroadbandModel')

        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId))
        with open(join(folderName, '../resources/speech1.wav'),
                  'rb') as audio_file:
            print(json.dumps(speech_to_text.recognize(
                audio_file, content_type='audio/wav', timestamps=True,
                word_confidence=True),
                indent=2))

        #r = requests.get('https://api.github.com/user', auth=('user', 'pass'))

        self.onStopped()
        pass

    def onUnload(self):
        import sys

        #if self.folderName and folderName in sys.path:
        #    sys.path.remove(folderName)
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
